import { TypeOrmModuleOptions } from '@nestjs/typeorm';
<%_ if (databaseType === 'mongodb') { _%> import { MongoMemoryServer } from 'mongodb-memory-server'; <%_ } _%>

<%_ if (databaseType === 'mongodb') { _%>
async function ormConfig(): Promise<TypeOrmModuleOptions> {
let mongod;
if (process.env.BACKEND_ENV !== 'prod') {
    mongod = await MongoMemoryServer.create();
}
<%_ } else { _%>
function ormConfig(): TypeOrmModuleOptions {
<%_ } _%>
<%_
  const nodeProdDatabaseDriver = databaseType !== 'sql' ? databaseType : (prodDatabaseType === 'postgresql') ? 'postgres' : prodDatabaseType;
  const nodeDevDatabaseDriver = databaseType !== 'sql' ? databaseType : (devDatabaseType === 'postgresql') ? 'postgres' : devDatabaseType;
_%>
    let ormconfig: TypeOrmModuleOptions = {
        name: 'default',
<%_ if (databaseType === 'mongodb') { _%>
        type: '<%= nodeProdDatabaseDriver %>',
        host: 'localhost',
        port: mongod?await mongod.getPort():0,
        database: mongod?await mongod.getDbName():'dev',
        useNewUrlParser: true,
        useUnifiedTopology: true,
<%_ } else { _%>
        type: 'sqlite',
        database: __dirname + '../../target/db/sqlite-dev-db.sql',
<%_ } _%>
        logging: true,
        synchronize: true,
    };


    if (process.env.BACKEND_ENV === 'prod') {
        ormconfig = {
            name: 'default',
            type: '<%= nodeProdDatabaseDriver %>',
            database: '<%= (databaseType === 'sql') ? prodDatabaseName : baseName %>',
            host: '<%= (databaseType === 'sql') ? prodDatabaseType : databaseType %>',
            // port: <%= dbPortValue %>,
            username: '<%- (databaseType === 'sql') ? prodDatabaseUsername : '' %>',
            password: '<%- (databaseType === 'sql') ? prodDatabasePassword : '' %>',
            logging: false,
        };
    }

    if (process.env.BACKEND_ENV === 'test') {
    ormconfig = {
        name: 'default',
<%_ if (databaseTypeSql) { _%>
        type: 'sqlite',
        database: ':memory:',
<%_ } else { _%>
        type: '<%= nodeProdDatabaseDriver %>',
        host: 'localhost',
        port: await mongod.getPort(),
        database: await mongod.getDbName(),
        useNewUrlParser: true,
        useUnifiedTopology: true,
<%_ } _%>
        keepConnectionAlive: true,
        logging: true,
        synchronize: true,
        };
    }
<%_ if (devDatabaseType !== 'sqlite') { _%>

    if (process.env.BACKEND_ENV === 'dev') {
        ormconfig = {
            name: 'default',
            type: '<%= nodeDevDatabaseDriver %>',
            database: '<%= (databaseType === 'sql') ? devDatabaseName : baseName %>',
            host: '127.0.0.1',
            // port: <%= dbPortValue %>,
            username: '<%- (databaseType === 'sql') ? devDatabaseUsername : '' %>',
            password: '<%- (databaseType === 'sql') ? devDatabasePassword : '' %>',
            logging: false,
        };
    }
<%_ } _%>

  return {
    synchronize: false,
    entities: [__dirname + '/domain/*.entity{.ts,.js}'],
    migrations: [__dirname + '/migrations/**/*{.ts,.js}'],
    cli: {
        migrationsDir: 'src/migrations',
    },
    ...ormconfig,
  };
}

export { ormConfig };

export default ormConfig();
